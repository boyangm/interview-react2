{"ast":null,"code":"import _slicedToArray from\"/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{WebState}from'./appstate';// Panel for Starting Acivity\nvar Panel1=function Panel1(){//sets up context from Webstate\nvar context=useContext(WebState);var newActivity=context.newActivity;//Hooks\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),description=_useState2[0],setDescription=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],setMessage=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),title=_useState6[0],setTitle=_useState6[1];//handles Sending local state back to WebState to add Activity Entry\n//Also resets state (LOCAL)\nvar handleSubmit=function handleSubmit(event){event.preventDefault();if(description!==''&&title!==''){newActivity(title,description);setDescription('');setTitle('');setMessage('');}else{//Validation\nsetMessage('Please Fill Out All Fields');}};//handles Description State Change (LOCAL)\nvar handleChange=function handleChange(e){setDescription(e.target.value);};//handles Tile State Change (LOCAL)\nvar handleTitleChange=function handleTitleChange(e){setTitle(e.target.value);};return React.createElement(\"div\",{className:\"panel1Cont\"},React.createElement(\"form\",{className:\"panel1\"},React.createElement(\"label\",{className:\"err\"},message),React.createElement(\"label\",{className:\"formelem\"},\"Title\"),React.createElement(\"input\",{className:\"formelem\",value:title,onChange:handleTitleChange,type:\"text\"}),React.createElement(\"label\",{className:\"formelem\"},\"Activity Description\"),React.createElement(\"input\",{className:\"formelem\",value:description,onChange:handleChange,type:\"text\"}),React.createElement(\"button\",{onClick:handleSubmit},\"Start Activity\")));};export default Panel1;","map":{"version":3,"sources":["/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/src/components/Panel1.js"],"names":["React","useState","useContext","WebState","Panel1","context","newActivity","description","setDescription","message","setMessage","title","setTitle","handleSubmit","event","preventDefault","handleChange","e","target","value","handleTitleChange"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,OAASC,QAAT,KAAyB,YAAzB,CAEA;AACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjB;AACA,GAAMC,CAAAA,OAAO,CAAGH,UAAU,CAACC,QAAD,CAA1B,CAFiB,GAGVG,CAAAA,WAHU,CAGKD,OAHL,CAGVC,WAHU,CAKjB;AALiB,cAMqBL,QAAQ,CAAC,EAAD,CAN7B,wCAMVM,WANU,eAMGC,cANH,8BAOaP,QAAQ,CAAC,EAAD,CAPrB,yCAOVQ,OAPU,eAODC,UAPC,8BAQST,QAAQ,CAAC,EAAD,CARjB,yCAQVU,KARU,eAQHC,QARG,eAUjB;AACA;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAU,CAC3BA,KAAK,CAACC,cAAN,GACA,GAAGR,WAAW,GAAK,EAAhB,EAAsBI,KAAK,GAAK,EAAnC,CAAsC,CAClCL,WAAW,CAACK,KAAD,CAAQJ,WAAR,CAAX,CACAC,cAAc,CAAC,EAAD,CAAd,CACAI,QAAQ,CAAC,EAAD,CAAR,CACAF,UAAU,CAAC,EAAD,CAAV,CAEH,CAND,IAMK,CACD;AACAA,UAAU,CAAC,4BAAD,CAAV,CACH,CACJ,CAZD,CAcA;AACA,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CACxBT,cAAc,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,CAEH,CAHD,CAKA;AACA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACH,CAAD,CAAO,CAC7BL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CAEH,CAHD,CAKA,MACI,4BAAK,SAAS,CAAG,YAAjB,EACI,4BAAM,SAAS,CAAG,QAAlB,EACI,6BAAO,SAAS,CAAC,KAAjB,EAAwBV,OAAxB,CADJ,CAEI,6BAAO,SAAS,CAAC,UAAjB,UAFJ,CAGI,6BAAO,SAAS,CAAC,UAAjB,CAA4B,KAAK,CAAGE,KAApC,CAA2C,QAAQ,CAAIS,iBAAvD,CAAyE,IAAI,CAAC,MAA9E,EAHJ,CAII,6BAAO,SAAS,CAAC,UAAjB,yBAJJ,CAKI,6BAAO,SAAS,CAAC,UAAjB,CAA4B,KAAK,CAAGb,WAApC,CAAiD,QAAQ,CAAIS,YAA7D,CAA0E,IAAI,CAAC,MAA/E,EALJ,CAMI,8BAAQ,OAAO,CAAGH,YAAlB,mBANJ,CADJ,CADJ,CAYH,CAlDD,CAoDA,cAAeT,CAAAA,MAAf","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { WebState } from './appstate'\n\n// Panel for Starting Acivity\nconst Panel1 = () => {\n    //sets up context from Webstate\n    const context = useContext(WebState)\n    const {newActivity} = context\n    \n    //Hooks\n    const [description, setDescription] = useState('')\n    const [message, setMessage] = useState('')\n    const [title, setTitle] = useState('')\n\n    //handles Sending local state back to WebState to add Activity Entry\n    //Also resets state (LOCAL)\n    const handleSubmit = (event) =>{\n        event.preventDefault()\n        if(description !== '' && title !== ''){\n            newActivity(title, description)\n            setDescription('')\n            setTitle('')\n            setMessage('')\n\n        }else{\n            //Validation\n            setMessage('Please Fill Out All Fields')\n        }\n    }\n\n    //handles Description State Change (LOCAL)\n    const handleChange = (e) => {\n        setDescription(e.target.value)\n\n    }\n\n    //handles Tile State Change (LOCAL)\n    const handleTitleChange = (e) => {\n        setTitle(e.target.value)\n\n    }\n\n    return (\n        <div className = 'panel1Cont'>\n            <form className = 'panel1'>\n                <label className=\"err\">{message}</label>\n                <label className=\"formelem\">Title</label>\n                <input className=\"formelem\" value ={title} onChange = {handleTitleChange}type='text'></input>\n                <label className=\"formelem\">Activity Description</label>\n                <input className=\"formelem\" value ={description} onChange = {handleChange}type='text'></input>\n                <button onClick ={handleSubmit} >Start Activity</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Panel1\n"]},"metadata":{},"sourceType":"module"}