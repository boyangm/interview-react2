{"ast":null,"code":"import _objectSpread from \"/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/src/components/appstate.js\";\nimport React, { useState } from 'react';\nexport const WebState = React.createContext();\nexport const Provider = props => {\n  const _useState = useState(JSON.parse(sessionStorage.getItem('Activity')) || []),\n        _useState2 = _slicedToArray(_useState, 2),\n        activities = _useState2[0],\n        setActivities = _useState2[1];\n\n  const newActivity = data => {\n    const today = new Date();\n    let hours = today.getHours();\n\n    if (hours < 10) {\n      hours = `0${hours.toString()}`;\n    }\n\n    let minutes = today.getMinutes();\n\n    if (minutes < 10) {\n      minutes = `0${minutes.toString()}`;\n    }\n\n    let seconds = today.getSeconds();\n\n    if (seconds < 10) {\n      seconds = `0${seconds.toString()}`;\n    }\n\n    const time = hours + \":\" + minutes + \":\" + seconds;\n    console.log(`${data} started at ${time}`);\n    const item = {\n      time,\n      today,\n      description: data\n    };\n    setActivities(prevState => {\n      sessionStorage.setItem('Activity', JSON.stringify([...prevState, item]));\n      return [...prevState, item];\n    });\n  };\n\n  const handleEnd = (key, time) => {\n    setActivities(prevState => {\n      const endDate = new Date(time);\n      let hours = endDate.getHours();\n\n      if (hours < 10) {\n        hours = `0${hours.toString()}`;\n      }\n\n      let minutes = endDate.getMinutes();\n\n      if (minutes < 10) {\n        minutes = `0${minutes.toString()}`;\n      }\n\n      let seconds = endDate.getSeconds();\n\n      if (seconds < 10) {\n        seconds = `0${seconds.toString()}`;\n      }\n\n      const endTime = hours + \":\" + minutes + \":\" + seconds;\n\n      const entry = _objectSpread({}, prevState[key], {\n        endTime,\n        endDate\n      });\n\n      const filteredArr = prevState.filter(activity => activity !== prevState[key]);\n      sessionStorage.removeItem('Activity');\n      sessionStorage.setItem('Activity', JSON.stringify([...filteredArr, entry]));\n      return [...filteredArr, entry];\n    });\n  };\n\n  return React.createElement(WebState.Provider, {\n    value: {\n      newActivity,\n      activities,\n      handleEnd\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/src/components/appstate.js"],"names":["React","useState","WebState","createContext","Provider","props","JSON","parse","sessionStorage","getItem","activities","setActivities","newActivity","data","today","Date","hours","getHours","toString","minutes","getMinutes","seconds","getSeconds","time","console","log","item","description","prevState","setItem","stringify","handleEnd","key","endDate","endTime","entry","filteredArr","filter","activity","removeItem","children"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\n\nexport const WebState = React.createContext()\n\nexport const Provider = (props) => {\n    const [activities, setActivities] = useState(JSON.parse(sessionStorage.getItem('Activity')) || [])\n\n    const newActivity = (data) => {\n        const today = new Date();\n        let hours = today.getHours()\n        if (hours < 10) {\n            hours = `0${hours.toString()}`\n        }\n        let minutes = today.getMinutes()\n        if (minutes < 10) {\n            minutes = `0${minutes.toString()}`\n        }\n        let seconds = today.getSeconds()\n        if (seconds < 10) {\n            seconds = `0${seconds.toString()}`\n        }\n        const time = hours + \":\" + minutes + \":\" + seconds;\n        console.log(`${data} started at ${time}`)\n        const item = {\n            time,\n            today,\n            description: data,\n\n        }\n        setActivities((prevState) => {\n            sessionStorage.setItem('Activity', JSON.stringify([...prevState, item]))\n            return [...prevState, item]\n\n\n        })\n\n    }\n    const handleEnd = (key, time) => {\n        setActivities(prevState => {\n            const endDate = new Date(time)\n            let hours = endDate.getHours()\n            if (hours < 10) {\n                hours = `0${hours.toString()}`\n            }\n            let minutes = endDate.getMinutes()\n            if (minutes < 10) {\n                minutes = `0${minutes.toString()}`\n            }\n            let seconds = endDate.getSeconds()\n            if (seconds < 10) {\n                seconds = `0${seconds.toString()}`\n            }\n            const endTime = hours + \":\" + minutes + \":\" + seconds;\n            const entry = { ...prevState[key], endTime, endDate }\n            const filteredArr = prevState.filter(activity => activity !== prevState[key])\n            sessionStorage.removeItem('Activity');\n            sessionStorage.setItem('Activity', JSON.stringify([...filteredArr, entry]))\n            return [...filteredArr, entry]\n\n\n        })\n    }\n\n\n    return (\n        <WebState.Provider value={{\n            newActivity,\n            activities,\n            handleEnd\n        }}>\n\n            {props.children}\n        </WebState.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}