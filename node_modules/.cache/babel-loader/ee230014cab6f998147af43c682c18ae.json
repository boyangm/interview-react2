{"ast":null,"code":"import _slicedToArray from \"/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/src/components/appstate.js\";\nimport React, { useState } from 'react';\nexport const WebState = React.createContext();\nexport const Provider = props => {\n  const useInput = initialvalue => {\n    const _useState = useState(initialvalue),\n          _useState2 = _slicedToArray(_useState, 2),\n          inputs = _useState2[0],\n          setInputs = _useState2[1];\n\n    const handlevaluechange = e => {\n      setInputs(e.target.value);\n    };\n\n    return {\n      value: inputs,\n      onChange: handlevaluechange\n    };\n  };\n\n  return React.createElement(WebState.Provider, {\n    value: {\n      useInput\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/src/components/appstate.js"],"names":["React","useState","WebState","createContext","Provider","props","useInput","initialvalue","inputs","setInputs","handlevaluechange","e","target","value","onChange","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AAGA,OAAO,MAAMC,QAAQ,GAAGF,KAAK,CAACG,aAAN,EAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAU;AAE9B,QAAMC,QAAQ,GAAIC,YAAD,IAAkB;AAAA,sBACHN,QAAQ,CAACM,YAAD,CADL;AAAA;AAAA,UACxBC,MADwB;AAAA,UAChBC,SADgB;;AAE/B,UAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7BF,MAAAA,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AAEH,KAHD;;AAIA,WAAO;AACHA,MAAAA,KAAK,EAAEL,MADJ;AAEHM,MAAAA,QAAQ,EAAEJ;AAFP,KAAP;AAKH,GAXD;;AAaA,SACI,oBAAC,QAAD,CAAU,QAAV;AAAmB,IAAA,KAAK,EAAI;AAACJ,MAAAA;AAAD,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACU,QADX,CADJ;AAKH,CApBM","sourcesContent":["import React , {useState} from 'react'\n\n\nexport const WebState = React.createContext()\n\nexport const Provider = (props) =>{\n\n    const useInput = (initialvalue) => {\n        const [inputs, setInputs] = useState(initialvalue);\n        const handlevaluechange = (e) => {\n            setInputs(e.target.value)\n    \n        }\n        return {\n            value: inputs,\n            onChange: handlevaluechange\n        }\n    \n    }\n\n    return(\n        <WebState.Provider value = {{useInput}}>\n            {props.children}\n        </WebState.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}