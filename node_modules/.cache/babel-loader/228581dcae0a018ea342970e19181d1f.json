{"ast":null,"code":"import _objectSpread from\"/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';//exported WebState to be used with Context Hooks\nexport var WebState=React.createContext();//Holds the state of our App to pass data to diff components\nexport var Provider=function Provider(props){//Hooks\nvar _useState=useState(JSON.parse(sessionStorage.getItem('Activity'))||[]),_useState2=_slicedToArray(_useState,2),activities=_useState2[0],setActivities=_useState2[1];var _useState3=useState(new Date()),_useState4=_slicedToArray(_useState3,2),currentTime=_useState4[0],setCurrentTime=_useState4[1];//stores an Activity Entry\nvar newActivity=function newActivity(title,description){var today=new Date();var hours=today.getHours();if(hours<10){hours=\"0\".concat(hours.toString());}var minutes=today.getMinutes();if(minutes<10){minutes=\"0\".concat(minutes.toString());}var seconds=today.getSeconds();if(seconds<10){seconds=\"0\".concat(seconds.toString());}var time=hours+\":\"+minutes+\":\"+seconds;var item={time:time,today:today,title:title,description:description};setActivities(function(prevState){sessionStorage.setItem('Activity',JSON.stringify([].concat(_toConsumableArray(prevState),[item])));return[].concat(_toConsumableArray(prevState),[item]);});};//Adds an End time to Activity\nvar handleEnd=function handleEnd(key,time){setActivities(function(prevState){var endDate=new Date(time);var hours=endDate.getHours();if(hours<10){hours=\"0\".concat(hours.toString());}var minutes=endDate.getMinutes();if(minutes<10){minutes=\"0\".concat(minutes.toString());}var seconds=endDate.getSeconds();if(seconds<10){seconds=\"0\".concat(seconds.toString());}var endTime=hours+\":\"+minutes+\":\"+seconds;var entry=_objectSpread({},prevState[key],{endTime:endTime,endDate:endDate});var filteredArr=prevState.filter(function(activity){return activity!==prevState[key];});sessionStorage.removeItem('Activity');sessionStorage.setItem('Activity',JSON.stringify([].concat(_toConsumableArray(filteredArr),[entry])));return[].concat(_toConsumableArray(filteredArr),[entry]);});};//calculates the duration of the Activity\nvar handleTimeState=function handleTimeState(starttime){var endTime=arguments.length>1&&arguments[1]!==undefined?arguments[1]:currentTime;var time1=new Date(starttime);var time2=new Date(endTime);var seconds=Math.floor((time2-time1)/1000)||0;var minutes=Math.floor(seconds/60)||0;if(minutes<10){minutes=\"0\".concat(minutes.toString());}var hours=Math.floor(minutes/60)||0;if(hours<10){hours=\"0\".concat(hours.toString());}var remainderSeconds=seconds%60;if(remainderSeconds<10){remainderSeconds=\"0\".concat(remainderSeconds.toString());}return\"\".concat(hours,\":\").concat(minutes,\":\").concat(remainderSeconds);};//gets the Dates to calculate duration\nvar duration=function duration(item){var today=item.today;var startDate=new Date(today);var endDate=new Date(item.endDate);if(item.endTime){return handleTimeState(startDate,endDate);}else{return handleTimeState(today);}};//Auto updates the Date for State\nuseEffect(function(){var interval=setInterval(function(){setCurrentTime(new Date());},1000);return function(){return clearInterval(interval);};},[]);return React.createElement(WebState.Provider,{value:{newActivity:newActivity,activities:activities,handleEnd:handleEnd,currentTime:currentTime,handleTimeState:handleTimeState,duration:duration}},props.children);};","map":{"version":3,"sources":["/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/src/components/appstate.js"],"names":["React","useState","useEffect","WebState","createContext","Provider","props","JSON","parse","sessionStorage","getItem","activities","setActivities","Date","currentTime","setCurrentTime","newActivity","title","description","today","hours","getHours","toString","minutes","getMinutes","seconds","getSeconds","time","item","prevState","setItem","stringify","handleEnd","key","endDate","endTime","entry","filteredArr","filter","activity","removeItem","handleTimeState","starttime","time1","time2","Math","floor","remainderSeconds","duration","startDate","interval","setInterval","clearInterval","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\n//exported WebState to be used with Context Hooks\nexport const WebState = React.createContext()\n\n//Holds the state of our App to pass data to diff components\nexport const Provider = (props) => {\n    //Hooks\n    const [activities, setActivities] = useState(JSON.parse(sessionStorage.getItem('Activity')) || [])\n    const [currentTime, setCurrentTime] = useState(new Date())\n\n    //stores an Activity Entry\n    const newActivity = (title, description) => {\n        const today = new Date();\n        let hours = today.getHours()\n        if (hours < 10) {\n            hours = `0${hours.toString()}`\n        }\n        let minutes = today.getMinutes()\n        if (minutes < 10) {\n            minutes = `0${minutes.toString()}`\n        }\n        let seconds = today.getSeconds()\n        if (seconds < 10) {\n            seconds = `0${seconds.toString()}`\n        }\n        const time = hours + \":\" + minutes + \":\" + seconds;\n        const item = {\n            time,\n            today,\n            title,\n            description\n\n        }\n        setActivities((prevState) => {\n            sessionStorage.setItem('Activity', JSON.stringify([...prevState, item]))\n            return [...prevState, item]\n\n\n        })\n\n    }\n    //Adds an End time to Activity\n    const handleEnd = (key, time) => {\n        setActivities(prevState => {\n            const endDate = new Date(time)\n            let hours = endDate.getHours()\n            if (hours < 10) {\n                hours = `0${hours.toString()}`\n            }\n            let minutes = endDate.getMinutes()\n            if (minutes < 10) {\n                minutes = `0${minutes.toString()}`\n            }\n            let seconds = endDate.getSeconds()\n            if (seconds < 10) {\n                seconds = `0${seconds.toString()}`\n            }\n            const endTime = hours + \":\" + minutes + \":\" + seconds;\n            const entry = { ...prevState[key], endTime, endDate }\n            const filteredArr = prevState.filter(activity => activity !== prevState[key])\n            sessionStorage.removeItem('Activity');\n            sessionStorage.setItem('Activity', JSON.stringify([...filteredArr, entry]))\n            return [...filteredArr, entry]\n\n\n        })\n    }\n\n    //calculates the duration of the Activity\n    const handleTimeState = (starttime, endTime = currentTime) => {\n        const time1 = new Date(starttime)\n        const time2 = new Date(endTime)\n        let seconds = Math.floor((time2 - time1) / 1000) || 0;\n        let minutes = Math.floor(seconds / 60) || 0\n        if (minutes < 10) {\n            minutes = `0${minutes.toString()}`\n        }\n        let hours = Math.floor(minutes / 60) || 0\n        if (hours < 10) {\n            hours = `0${hours.toString()}`\n        }\n        let remainderSeconds = seconds % 60\n        if (remainderSeconds < 10) {\n            remainderSeconds = `0${remainderSeconds.toString()}`\n        }\n        return `${hours}:${minutes}:${remainderSeconds}`\n\n    }\n\n    //gets the Dates to calculate duration\n    const duration = (item) => {\n        const { today } = item\n        const startDate = new Date(today)\n        const endDate = new Date(item.endDate)\n\n        if (item.endTime) {\n            return handleTimeState(startDate, endDate)\n        } else {\n\n            return handleTimeState(today);\n        }\n\n\n    }\n    //Auto updates the Date for State\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setCurrentTime(new Date())\n        }, 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <WebState.Provider value={{\n            newActivity,\n            activities,\n            handleEnd,\n            currentTime,\n            handleTimeState,\n            duration\n        }}>\n\n            {props.children}\n        </WebState.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}