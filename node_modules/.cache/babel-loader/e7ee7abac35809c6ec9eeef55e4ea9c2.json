{"ast":null,"code":"import _slicedToArray from \"/Users/boyangmatsapola/Desktop/workshops/interview-react2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/boyangmatsapola/Desktop/workshops/interview-react2/src/components/Panel1.js\";\nimport React, { useState, useContext } from 'react';\nimport { WebState } from './appstate'; // Panel for Starting Acivity\n\nconst Panel1 = () => {\n  //sets up context from Webstate\n  const context = useContext(WebState);\n  const newActivity = context.newActivity; //Hooks\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        description = _useState2[0],\n        setDescription = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        message = _useState4[0],\n        setMessage = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        title = _useState6[0],\n        setTitle = _useState6[1]; //handles Sending local state back to WebState to add Activity Entry\n  //Also resets state (LOCAL)\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (description !== '' && title !== '') {\n      newActivity(title, description);\n      setDescription('');\n      setTitle('');\n      setMessage('');\n    } else {\n      //Validation\n      setMessage('Please Fill Out All Fields');\n    }\n  }; //handles Description State Change (LOCAL)\n\n\n  const handleChange = e => {\n    setDescription(e.target.value);\n  }; //handles Tile State Change (LOCAL)\n\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"panel1Cont\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"panel1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"err\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, message), React.createElement(\"label\", {\n    className: \"formelem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"input\", {\n    className: \"formelem\",\n    value: title,\n    onChange: handleTitleChange,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"formelem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Activity Description\"), React.createElement(\"input\", {\n    className: \"formelem\",\n    value: description,\n    onChange: handleChange,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Start Activity\")));\n};\n\nexport default Panel1;","map":{"version":3,"sources":["/Users/boyangmatsapola/Desktop/workshops/interview-react2/src/components/Panel1.js"],"names":["React","useState","useContext","WebState","Panel1","context","newActivity","description","setDescription","message","setMessage","title","setTitle","handleSubmit","event","preventDefault","handleChange","e","target","value","handleTitleChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,YAAzB,C,CAEA;;AACA,MAAMC,MAAM,GAAG,MAAM;AACjB;AACA,QAAMC,OAAO,GAAGH,UAAU,CAACC,QAAD,CAA1B;AAFiB,QAGVG,WAHU,GAGKD,OAHL,CAGVC,WAHU,EAKjB;;AALiB,oBAMqBL,QAAQ,CAAC,EAAD,CAN7B;AAAA;AAAA,QAMVM,WANU;AAAA,QAMGC,cANH;;AAAA,qBAOaP,QAAQ,CAAC,EAAD,CAPrB;AAAA;AAAA,QAOVQ,OAPU;AAAA,QAODC,UAPC;;AAAA,qBAQST,QAAQ,CAAC,EAAD,CARjB;AAAA;AAAA,QAQVU,KARU;AAAA,QAQHC,QARG,kBAUjB;AACA;;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAU;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGR,WAAW,KAAK,EAAhB,IAAsBI,KAAK,KAAK,EAAnC,EAAsC;AAClCL,MAAAA,WAAW,CAACK,KAAD,EAAQJ,WAAR,CAAX;AACAC,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAI,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,EAAD,CAAV;AAEH,KAND,MAMK;AACD;AACAA,MAAAA,UAAU,CAAC,4BAAD,CAAV;AACH;AACJ,GAZD,CAZiB,CA0BjB;;;AACA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AACxBT,IAAAA,cAAc,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAEH,GAHD,CA3BiB,CAgCjB;;;AACA,QAAMC,iBAAiB,GAAIH,CAAD,IAAO;AAC7BL,IAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AAEH,GAHD;;AAKA,SACI;AAAK,IAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAG,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBV,OAAxB,CADJ,EAEI;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGI;AAAO,IAAA,SAAS,EAAC,UAAjB;AAA4B,IAAA,KAAK,EAAGE,KAApC;AAA2C,IAAA,QAAQ,EAAIS,iBAAvD;AAAyE,IAAA,IAAI,EAAC,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJJ,EAKI;AAAO,IAAA,SAAS,EAAC,UAAjB;AAA4B,IAAA,KAAK,EAAGb,WAApC;AAAiD,IAAA,QAAQ,EAAIS,YAA7D;AAA0E,IAAA,IAAI,EAAC,MAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAQ,IAAA,OAAO,EAAGH,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,CADJ,CADJ;AAYH,CAlDD;;AAoDA,eAAeT,MAAf","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { WebState } from './appstate'\n\n// Panel for Starting Acivity\nconst Panel1 = () => {\n    //sets up context from Webstate\n    const context = useContext(WebState)\n    const {newActivity} = context\n    \n    //Hooks\n    const [description, setDescription] = useState('')\n    const [message, setMessage] = useState('')\n    const [title, setTitle] = useState('')\n\n    //handles Sending local state back to WebState to add Activity Entry\n    //Also resets state (LOCAL)\n    const handleSubmit = (event) =>{\n        event.preventDefault()\n        if(description !== '' && title !== ''){\n            newActivity(title, description)\n            setDescription('')\n            setTitle('')\n            setMessage('')\n\n        }else{\n            //Validation\n            setMessage('Please Fill Out All Fields')\n        }\n    }\n\n    //handles Description State Change (LOCAL)\n    const handleChange = (e) => {\n        setDescription(e.target.value)\n\n    }\n\n    //handles Tile State Change (LOCAL)\n    const handleTitleChange = (e) => {\n        setTitle(e.target.value)\n\n    }\n\n    return (\n        <div className = 'panel1Cont'>\n            <form className = 'panel1'>\n                <label className=\"err\">{message}</label>\n                <label className=\"formelem\">Title</label>\n                <input className=\"formelem\" value ={title} onChange = {handleTitleChange}type='text'></input>\n                <label className=\"formelem\">Activity Description</label>\n                <input className=\"formelem\" value ={description} onChange = {handleChange}type='text'></input>\n                <button onClick ={handleSubmit} >Start Activity</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Panel1\n"]},"metadata":{},"sourceType":"module"}