{"ast":null,"code":"import _objectSpread from \"/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/src/components/appstate.js\";\nimport React, { useState } from 'react';\nexport const WebState = React.createContext();\nexport const Provider = props => {\n  const _useState = useState(JSON.parse(sessionStorage.getItem('Activity')) || []),\n        _useState2 = _slicedToArray(_useState, 2),\n        activities = _useState2[0],\n        setActivities = _useState2[1];\n\n  const newActivity = data => {\n    var today = new Date();\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    console.log(`${data} started at ${time}`);\n    const item = {\n      time,\n      today,\n      description: data\n    };\n    setActivities(prevState => {\n      sessionStorage.setItem('Activity', JSON.stringify([...prevState, item]));\n      return [...prevState, item];\n    });\n  };\n\n  const handleEnd = (key, time) => {\n    setActivities(prevState => {\n      const endDate = new Date(time);\n      const endTime = endDate.getHours() + \":\" + endDate.getMinutes() + \":\" + endDate.getSeconds();\n\n      const entry = _objectSpread({}, prevState[key], {\n        endTime\n      });\n\n      const filteredArr = prevState.filter(activity => activity != prevState[key]);\n      console.log(filteredArr);\n      sessionStorage.removeItem('Activity');\n      sessionStorage.setItem('Activity', JSON.stringify([...filteredArr, entry]));\n      return [...filteredArr, entry];\n    });\n  };\n\n  const useInput = initialvalue => {\n    const _useState3 = useState(initialvalue),\n          _useState4 = _slicedToArray(_useState3, 2),\n          inputs = _useState4[0],\n          setInputs = _useState4[1];\n\n    const handlevaluechange = e => {\n      setInputs(e.target.value);\n    };\n\n    const clear = e => {\n      setInputs('');\n    };\n\n    return {\n      value: inputs,\n      onChange: handlevaluechange,\n      clear\n    };\n  };\n\n  return React.createElement(WebState.Provider, {\n    value: {\n      useInput,\n      newActivity,\n      activities,\n      handleEnd\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/src/components/appstate.js"],"names":["React","useState","WebState","createContext","Provider","props","JSON","parse","sessionStorage","getItem","activities","setActivities","newActivity","data","today","Date","time","getHours","getMinutes","getSeconds","console","log","item","description","prevState","setItem","stringify","handleEnd","key","endDate","endTime","entry","filteredArr","filter","activity","removeItem","useInput","initialvalue","inputs","setInputs","handlevaluechange","e","target","value","clear","onChange","children"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\n\nexport const WebState = React.createContext()\n\nexport const Provider = (props) => {\n    const [activities, setActivities] = useState(JSON.parse(sessionStorage.getItem('Activity'))|| [])\n    \n    const newActivity = (data) => {\n        var today = new Date();\n        var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n        console.log(`${data} started at ${time}`)\n        const item = {\n            time,\n            today, \n            description: data,\n            \n        }\n        setActivities((prevState) =>{\n                sessionStorage.setItem('Activity',JSON.stringify([...prevState,item]))\n                return [...prevState,item]\n                \n\n        })\n    \n    }\n    const handleEnd = (key, time) =>{\n        setActivities(prevState =>{\n            const endDate = new Date(time)\n            const endTime = endDate.getHours() + \":\" + endDate.getMinutes() + \":\" + endDate.getSeconds();\n            const entry = {...prevState[key],endTime}\n            const filteredArr = prevState.filter(activity => activity != prevState[key])\n            console.log(filteredArr)\n            sessionStorage.removeItem('Activity');\n            sessionStorage.setItem('Activity',JSON.stringify([...filteredArr,entry]))\n                return [...filteredArr,entry]\n\n\n        })\n    }\n    const useInput = (initialvalue) => {\n        const [inputs, setInputs] = useState(initialvalue);\n        const handlevaluechange = (e) => {\n            setInputs(e.target.value)\n\n        }\n        const clear = (e) =>{\n            setInputs('')\n        }\n        return {\n            value: inputs,\n            onChange: handlevaluechange,\n            clear\n        }\n\n    }\n\n\n\n    return (\n        <WebState.Provider value={{ \n            useInput,\n            newActivity,\n            activities,\n            handleEnd\n        }}>\n\n            {props.children}\n        </WebState.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}