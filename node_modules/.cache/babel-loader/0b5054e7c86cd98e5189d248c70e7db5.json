{"ast":null,"code":"import _slicedToArray from \"/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/src/components/Panel2.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { WebState } from './appstate';\n\nconst Panel2 = props => {\n  const context = useContext(WebState);\n  const activities = context.activities,\n        handleEnd = context.handleEnd;\n\n  const _useState = useState(new Date()),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentTime = _useState2[0],\n        setCurrentTime = _useState2[1];\n\n  const duration = item => {\n    const today = item.today;\n    const startDate = new Date(today);\n    const endDate = new Date(item.endDate);\n\n    if (item.endTime) {\n      return handleTimeState(startDate, endDate);\n    } else {\n      return handleTimeState(today);\n    }\n  };\n\n  const handleTimeState = (starttime, endTime = currentTime) => {\n    const time1 = new Date(starttime);\n    const time2 = new Date(endTime);\n    let seconds = Math.floor((time2 - time1) / 1000);\n    let minutes = Math.floor(seconds / 60);\n\n    if (minutes < 10) {\n      minutes = `0${minutes.toString()}`;\n    }\n\n    let hours = Math.floor(minutes / 60);\n\n    if (hours < 10) {\n      hours = `0${hours.toString()}`;\n    }\n\n    let remainderSeconds = seconds % 60;\n\n    if (remainderSeconds < 10) {\n      remainderSeconds = `0${remainderSeconds.toString()}`;\n    }\n\n    if (hours || minutes || remainderSeconds === 'NaN') {\n      return \"00:00:00\";\n    } else {\n      return `${hours}:${minutes}:${remainderSeconds}`;\n    }\n  };\n\n  const endActivity = (event, key) => {\n    event.preventDefault();\n    handleEnd(key, currentTime);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Start Time\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"End Time\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Duration\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Description\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, activities.map(activity => React.createElement(\"tr\", {\n    key: activities.indexOf(activity),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, activity.time), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, activity.endTime || ''), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, duration(activity)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, activity.description), React.createElement(\"button\", {\n    onClick: e => endActivity(e, activities.indexOf(activity)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"End Activity\"))))));\n};\n\nexport default Panel2;","map":{"version":3,"sources":["/Users/boyangmatsapola/Desktop/workshops/interview-react2/my-app/src/components/Panel2.js"],"names":["React","useState","useEffect","useContext","WebState","Panel2","props","context","activities","handleEnd","Date","currentTime","setCurrentTime","duration","item","today","startDate","endDate","endTime","handleTimeState","starttime","time1","time2","seconds","Math","floor","minutes","toString","hours","remainderSeconds","endActivity","event","key","preventDefault","interval","setInterval","clearInterval","map","activity","indexOf","time","description","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { WebState } from './appstate'\n\nconst Panel2 = (props) => {\n    const context = useContext(WebState)\n    const { activities, handleEnd } = context\n    const [currentTime, setCurrentTime] = useState(new Date())\n\n    const duration = (item) => {\n        const { today } = item\n        const startDate = new Date(today)\n        const endDate = new Date(item.endDate)\n\n        if (item.endTime) {\n            return handleTimeState(startDate, endDate)\n        } else {\n\n            return handleTimeState(today);\n        }\n\n\n    }\n\n    const handleTimeState = (starttime, endTime = currentTime) => {\n        const time1 = new Date(starttime)\n        const time2 = new Date(endTime)\n        let seconds = Math.floor((time2 - time1) / 1000);\n        let minutes = Math.floor(seconds / 60)\n        if (minutes < 10) {\n            minutes = `0${minutes.toString()}`\n        }\n        let hours = Math.floor(minutes / 60)\n        if (hours < 10) {\n            hours = `0${hours.toString()}`\n        }\n        let remainderSeconds = seconds % 60\n        if (remainderSeconds < 10) {\n            remainderSeconds = `0${remainderSeconds.toString()}`\n        }\n        if(hours || minutes || remainderSeconds === 'NaN'){\n            return \"00:00:00\"\n\n        }else{\n            return `${hours}:${minutes}:${remainderSeconds}`\n\n        }\n\n    }\n\n    const endActivity = (event, key) => {\n        event.preventDefault()\n\n        handleEnd(key, currentTime)\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setCurrentTime(new Date())\n        }, 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Start Time</th>\n                        <th>End Time</th>\n                        <th>Duration</th>\n                        <th>Description</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        activities.map(activity => (\n                            <tr key={activities.indexOf(activity)}>\n                                <td>\n                                    {activity.time}\n                                </td>\n                                <td>\n                                    {activity.endTime || ''}\n                                </td>\n                                <td>\n                                    {duration(activity)}\n                                </td>\n                                <td>\n                                    {activity.description}\n                                </td>\n                                <button onClick={(e) => endActivity(e, activities.indexOf(activity))}>End Activity</button>\n                            </tr>\n\n                        ))\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Panel2\n"]},"metadata":{},"sourceType":"module"}